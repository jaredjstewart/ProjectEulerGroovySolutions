/** Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
class Problem2 {

    static List<Integer> generateFibsLessThan(int n) {
        def fibs = [1, 2]
        def nextFib = fibs[-1] + fibs[-2]

        while (nextFib < n) {
            fibs.add(nextFib)
            nextFib = fibs[-1] + fibs[-2]
        }

        return fibs
    }

    static int sumFibsLessThan(int n) {
        return Problem2.generateFibsLessThan(n).findAll({ it % 2 == 0 }).sum()
    }

    static int answer() {
        return sumFibsLessThan(4000000)
    }

}
